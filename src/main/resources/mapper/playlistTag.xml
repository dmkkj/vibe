<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.PlaylistTagMapper">

	<resultMap type="PlayListTag" id="listTagMap">
		<id column="pl_tag_code" property="plTagCode" />
		<association property="tag" javaType="Tag">
			<id column="tag_code" property="tagCode" />
			<result column="tag_name" property="tagName" />
		</association>
	</resultMap>
	
	<!-- 플레이리스트 플레이리스트코드마다 태그 가져오는 쿼리 -->
	<select id="searchTagPlaylist" resultMap="listTagMap" parameterType="Integer">
		SELECT * 
		FROM playlist_tag
		JOIN tag USING (tag_code)
		WHERE pl_code = #{code}
	</select>
	
	<!-- 플레이리스트 태그테이블에서 태그 검색 쿼리(중복 제거) -->
	<select id="searchTag" resultType="Integer" parameterType="String">
	SELECT distinct pl_code 
		FROM playlist_tag
		JOIN tag USING (tag_code)
		WHERE tag_name LIKE CONCAT('%', #{search}, '%')
	</select>
	
	<!-- 
	
	 SELECT * 
		FROM playlist_tag
		JOIN tag USING (tag_code)
        WHERE pl_code = 3
        AND tag_name LIKE '%El%'
	<select id="allPlaylist" resultMap="playlistMap" parameterType="SearchDTO">
		SELECT * FROM playlist
		JOIN user USING (user_email)
		WHERE pl_public_yn = 'Y'
		<if test="search != null">
			AND pl_title LIKE CONCAT('%', #{search}, '%')
		</if>
	</select> -->

	<!-- 플리 이름검색, 태그검색 -->
	<!-- <select id="searchPlaylist" resultMap="listTagMap" parameterType="SearchDTO">
		SELECT *
		FROM playlist_tag
		LEFT JOIN playlist USING (pl_code)
		JOIN user USING (user_email)
		JOIN tag USING (tag_code)
		WHERE pl_public_yn = 'Y'
		<choose>
			<when test="select == 'title'">
				AND pl_title LIKE CONCAT('%', #{search}, '%')
			</when>
			<when test="select == 'tag'">
				AND tag_name LIKE CONCAT('%', #{search}, '%')
			</when>
		</choose>
	</select> -->
	
	<!-- 문제 코드
	<select id="getLikesByTag" resultType="com.example.vo.PlaylistTagLikeVO">
		SELECT t.tag_name, p.pl_code, p.pl_title, COUNT(pl_like.like_code) AS like_count
        FROM tag t
        JOIN playlist_tag pt ON t.tag_code = pt.tag_code
        JOIN playlist p ON pt.pl_code = p.pl_code
        LEFT JOIN playlist_like pl_like ON p.pl_code = pl_like.pl_code
        WHERE t.tag_name = #{tagName}
        GROUP BY t.tag_name, p.pl_code
        ORDER BY like_count DESC;
	</select>
	-->
</mapper>
